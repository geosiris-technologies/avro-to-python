name: run-build

on: [push,pull_request]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9]
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install from build
        run: |
          python setup.py sdist bdist_wheel

      - name: Save build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-artifact
          path: dist/

  publish:
    name: Publish to PyPI
    needs: [build]
    
    runs-on: ${{ matrix.os }}
      strategy:
        max-parallel: 4
        matrix:
          python-version: [3.8, 3.9]
          os: [ubuntu-latest, windows-latest]
    steps:

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Retrieve the code and GIT history so that poetry-dynamic-versioning knows which version to upload
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-artifact
          path: dist/

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          pip install poetry-dynamic-versioning

      - name: Upload to PyPI
        env:
          POETRY_PYPI_TOKEN_TEST: ${{ secrets.POETRY_PYPI_TOKEN_TEST}}
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.POETRY_PYPI_TOKEN_PYPI}}
        run: |
          poetry config repositories.test https://test.pypi.org/legacy/
          poetry publish # --repository test